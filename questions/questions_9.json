[
  {
    "type": "choice",
    "question": "Як оголошується об'єктний літерал у JavaScript?",
    "answers": [
      "За допомогою круглих дужок ().",
      "За допомогою квадратних дужок [].",
      "За допомогою фігурних дужок {}.",
      "За допомогою ключового слова object."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Як називається пара, з якої складається кожна властивість об'єкта?",
    "answers": [
      "Ім'я та тип.",
      "Ключ та значення.",
      "Індекс та значення.",
      "Назва та функція."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Який тип даних зазвичай має ключ (ім'я) властивості об'єкта?",
    "answers": [
      "Число.",
      "Рядок.",
      "Булеве значення.",
      "Об'єкт."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Який тип даних може мати значення властивості об'єкта?",
    "answers": [
      "Тільки примітивні типи.",
      "Тільки масиви та об'єкти.",
      "Будь-який тип: примітиви, масиви, об'єкти, функції тощо.",
      "Тільки функції."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Як отримати доступ до значення властивості об'єкта за допомогою синтаксису \"через крапку\"?",
    "answers": [
      "objectName[\"key\"]",
      "objectName.key",
      "objectName(key)",
      "objectName->key"
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Що повертається при спробі отримати доступ до властивості об'єкта за допомогою синтаксису \"через крапку\", якщо такої властивості в об'єкті немає?",
    "answers": [
      "Помилка.",
      "null.",
      "undefined.",
      "Порожній об'єкт {}."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Коли найчастіше використовується синтаксис доступу до властивостей об'єкта \"через крапку\"?",
    "answers": [
      "Коли ім'я властивості зберігається у змінній.",
      "Коли ім'я властивості заздалегідь відоме.",
      "Для доступу до вкладених об'єктів.",
      "Для доступу до елементів масиву."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Як отримати доступ до значення властивості вкладеного об'єкта?",
    "answers": [
      "Використовуючи індекс елемента.",
      "Використовуючи ланцюжок звернень \"через крапку\".",
      "Використовуючи синтаксис квадратних дужок з масивом ключів.",
      "Це неможливо."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Як отримати доступ до значення властивості об'єкта за допомогою синтаксису квадратних дужок?",
    "answers": [
      "objectName.key",
      "objectName(key)",
      "objectName[key] (де key - рядок або змінна з іменем властивості)",
      "objectName->key"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Коли найчастіше використовується синтаксис доступу до властивостей об'єкта \"через квадратні дужки\"?",
    "answers": [
      "Коли ім'я властивості заздалегідь відоме.",
      "Коли ім'я властивості зберігається у змінній або заздалегідь невідоме.",
      "Тільки для доступу до методів об'єкта.",
      "Тільки для доступу до числових ключів."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Як змінити значення вже існуючої властивості об'єкта?",
    "answers": [
      "Переоглосити об'єкт з новим значенням.",
      "Видалити властивість, а потім додати її з новим значенням.",
      "Звернутись до властивості за ключем (наприклад, через крапку або квадратні дужки) і присвоїти їй нове значення.",
      "Викликати спеціальний метод changeValue()."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Як додати нову властивість до об'єкта після його створення?",
    "answers": [
      "Викликати метод addObjectProperty().",
      "Використовувати синтаксис \"через крапку\" або квадратні дужки зі значенням, якщо властивість з таким ключем відсутня, вона буде створена.",
      "Це можливо тільки під час оголошення об'єкта.",
      "Використовувати оператор new."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Як називається синтаксис при створенні об'єкта, коли ім'я властивості береться зі змінної або параметра функції з таким самим ім'ям, як і сама властивість (наприклад, { name, age } замість { name: name, age: age })?",
    "answers": [
      "Розширюваний синтаксис (Spread syntax).",
      "Синтаксис залишку (Rest syntax).",
      "Синтаксис коротких властивостей (Shorthand properties).",
      "Деструктуризація."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Яка властивість об'єкта містить функцію для роботи з даними цього об'єкта?",
    "answers": [
      "Ключ.",
      "Значення.",
      "Метод.",
      "Атрибут."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Яке ключове слово використовується всередині методу об'єкта для посилання на сам об'єкт, який викликав цей метод?",
    "answers": [
      "object",
      "self",
      "this",
      "parent"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Як отримати доступ до властивості об'єкта books всередині методу getBooks() об'єкта bookShelf? const bookShelf = {books: [\"The Last Kingdom\", \"The Mist\"], getBooks() { // Ваш код тут } };",
    "answers": [
      "`books`",
      "`bookShelf.books`",
      "`this.books`",
      "`getBooks.books`"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Який цикл використовується в JavaScript для перебору властивостей об'єкта?",
    "answers": [
      "for",
      "while",
      "for...of (для масивів)",
      "for...in (для об'єктів)"
    ],
    "correct": 3
  },
  {
    "type": "choice",
    "question": "Який статичний метод об'єкта Object повертає масив імен усіх перераховуваних ( enumerable) властивостей об'єкта?",
    "answers": [
      "Object.values()",
      "Object.keys()",
      "Object.entries()",
      "Object.getOwnPropertyNames()"
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Який статичний метод об'єкта Object повертає масив значень усіх перераховуваних (enumerable) властивостей об'єкта?",
    "answers": [
      "Object.keys()",
      "Object.values()",
      "Object.entries()",
      "Object.getOwnPropertyDescriptor()"
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Який статичний метод об'єкта Object повертає масив пар [ключ, значення] для всіх перераховуваних (enumerable) властивостей об'єкта?",
    "answers": [
      "Object.keys()",
      "Object.values()",
      "Object.assign()",
      "Object.entries()"
    ],
    "correct": 3
  }
]