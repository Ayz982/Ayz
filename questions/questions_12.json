[
  {
    "type": "choice",
    "question": "Які три основні модулі функціоналу JavaScript у браузері згадуються в матеріалі?",
    "answers": [
      "HTML, CSS, JavaScript.",
      "ECMAScript, DOM, BOM.",
      "Frontend, Backend, Database.",
      "Window, Document, Navigator."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Що таке DOM (Document Object Model)?",
    "answers": [
      "Стандарт мови програмування JavaScript.",
      "Інтерфейс для роботи з HTML-документом, що представляє його як деревоподібну структуру об'єктів.",
      "Інтерфейс для роботи з вікном браузера.",
      "Метод для виконання асинхронних операцій."
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Що таке BOM (Browser Object Model)?",
    "answers": [
      "Інтерфейс для роботи з HTML-документом.",
      "Стандарт мови JavaScript.",
      "Інтерфейс для роботи з вікном браузера та його функціями (історія, URL тощо).",
      "Набір методів для роботи з масивами."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Як браузер перетворює HTML-документ у формат, який він розуміє для подальшої роботи (DOM)?",
    "answers": [
      "За допомогою CSS-парсера.",
      "За допомогою JavaScript-інтерпретатора.",
      "За допомогою HTML-парсера.",
      "За допомогою мережевого запиту."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "З якого об'єкта зазвичай починається доступ до DOM-елементів у JavaScript?",
    "answers": [
      "window",
      "navigator",
      "document",
      "screen"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Який метод використовується для пошуку першого елемента в DOM, який відповідає вказаному CSS-селектору?",
    "answers": [
      "querySelectorAll()",
      "getElementById() (старий метод)",
      "querySelector()",
      "getElementsByClassName() (старий метод)"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Який метод використовується для пошуку всіх елементів у DOM, які відповідають вказаному CSS-селектору?",
    "answers": [
      "querySelector()",
      "getElementById()",
      "querySelectorAll()",
      "getElementsByTagName() (старий метод)"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Що повертає метод querySelector(selector), якщо елемент, що відповідає селектору, не знайдено?",
    "answers": [
      "Порожній рядок \"\".",
      "undefined.",
      "null.",
      "Порожній масив."
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Яка властивість DOM-елемента дозволяє отримати або змінити весь текстовий вміст елемента, ігноруючи HTML-теги всередині?",
    "answers": [
      "innerHTML",
      "value",
      "textContent",
      "innerText (менш стандартна)"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Яка властивість DOM-елемента використовується для роботи з CSS-класами елемента (додавання, видалення, перевірка наявності)?",
    "answers": [
      "style",
      "classes",
      "classList",
      "css"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Який метод об'єкта classList використовується для перевірки наявності певного CSS-класу на елементі?",
    "answers": [
      "add()",
      "remove()",
      "toggle()",
      "contains()"
    ],
    "correct": 3
  },
  {
    "type": "choice",
    "question": "Який метод об'єкта classList використовується для додавання одного або кількох CSS-класів до елемента?",
    "answers": [
      "contains()",
      "add()",
      "remove()",
      "replace()"
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Яка властивість DOM-елемента дозволяє читати або змінювати вбудовані CSS-стилі елемента, використовуючи camelCase нотацію для назв властивостей?",
    "answers": [
      "classList",
      "cssText (рідше використовується)",
      "style",
      "attributes"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Яка властивість використовується для доступу до значень користувацьких data-* атрибутів елемента?",
    "answers": [
      "attributes",
      "dataAttributes",
      "dataset",
      "customData"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Який метод використовується для створення нового HTML-елемента в пам'яті?",
    "answers": [
      "document.querySelector()",
      "document.createElement(tagName)",
      "element.append()",
      "element.innerHTML = \"...\""
    ],
    "correct": 1
  },
  {
    "type": "choice",
    "question": "Який метод використовується для додавання одного або декількох елементів після всіх дітей вказаного елемента?",
    "answers": [
      "prepend()",
      "before()",
      "append()",
      "after()"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Який метод використовується для видалення DOM-елемента з дерева документа?",
    "answers": [
      "element.hide()",
      "element.delete()",
      "element.remove()",
      "element.detach()"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Яка властивість DOM-елемента зберігає вміст елемента, включно з тегами, у вигляді рядка і може використовуватися для читання або повної заміни вмісту?",
    "answers": [
      "textContent",
      "innerText",
      "innerHTML",
      "value"
    ],
    "correct": 2
  },
  {
    "type": "choice",
    "question": "Який метод використовується для додавання рядка з HTML-тегами перед, після або всередину елемента у вказаній позиції?",
    "answers": [
      "element.append()",
      "element.prepend()",
      "element.innerHTML = \"...\"",
      "element.insertAdjacentHTML(position, string)"
    ],
    "correct": 3
  },
  {
    "type": "choice",
    "question": "Що таке подія (Event) у контексті вебсторінки, згідно з документом?",
    "answers": [
      "Зміна CSS-стилів.",
      "Результат виконання JavaScript-функції.",
      "Сигнал від браузера про те, що на вебсторінці щось відбулося (наприклад, дія користувача).",
      "Атрибут HTML-тегу."
    ],
    "correct": 2
  }
]